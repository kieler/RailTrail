version: "3.8"

services:
  railtrail-backend:
    image: ghcr.io/kieler/railtrail-backend:development
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      # - "NODE_ENV=production" # See: https://expressjs.com/en/guide/error-handling.html#the-default-error-handler
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PWD}@postgres:5432/${POSTGRES_DB}?schema=public
      - SERVER_PORT=8080
    networks:
      - railtrail

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PWD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - 5432
    volumes:
      - railtrail-database:/var/lib/postgresql/data
    networks:
      - railtrail

  railtrail-website:
    image: ghcr.io/kieler/railtrail-website:development
    restart: unless-stopped
    ports:
      - "80:3000"
    environment:
      - PORT=3000
      - BACKEND_URI=http://railtrail-backend:8080
    networks:
      - railtrail

volumes:
  railtrail-database:

networks:
  railtrail:
